<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤云两角，去天一握</title>
  <subtitle>山在地下，地山谦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-14T10:01:30.384Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ryl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++五种变量存储方式与external关键字</title>
    <link href="http://yoursite.com/2016/04/06/C++%E4%BA%94%E7%A7%8D%E5%8F%98%E9%87%8F%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F%E4%B8%8Eexternal%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://yoursite.com/2016/04/06/C++五种变量存储方式与external关键字/</id>
    <published>2016-04-06T09:15:14.000Z</published>
    <updated>2016-04-14T10:01:30.384Z</updated>
    
    <content type="html">&lt;h3 id=&quot;五种变量存储方式&quot;&gt;&lt;a href=&quot;#五种变量存储方式&quot; class=&quot;headerlink&quot; title=&quot;五种变量存储方式&quot;&gt;&lt;/a&gt;五种变量存储方式&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;存储描述&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;持续性&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;作用域&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;链接性&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;如何声明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;自动&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;自动&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码块&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;无&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码块中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;寄存器&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;自动&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码块&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;无&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码块中，register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;静态，无链接性&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;静态&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码块&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;无&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代码块中，static&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;静态，外部连接性&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;静态&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;外部&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不在任何代码块中，无关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;静态，内部链接性&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;静态&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;文件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;内部&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不在任何代码块中，static&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;register用于显示指出自动变量，没什么用处，C++11保留的目的是向下兼容；&lt;/li&gt;
&lt;li&gt;静态无链接性变量与自动变量的异同：&lt;ul&gt;
&lt;li&gt;静态无链接性变量在编译器&lt;strong&gt;编译&lt;/strong&gt;时，编译器在&lt;strong&gt;静态/全局存储区&lt;/strong&gt;分配内存；&lt;/li&gt;
&lt;li&gt;自动变量在代码块&lt;strong&gt;运行&lt;/strong&gt;时，编译器在&lt;strong&gt;栈&lt;/strong&gt;中分配内存；&lt;br&gt;+二者均只能在代码块中运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;###external关键字&lt;/p&gt;
&lt;p&gt;变量的声明有两种：定义声明（简称为定义）与引用声明（简称为声明）。如果要在一个文件中使用另一个文件中定义声明的变量，仅仅将这个变量储存为外部链接性的静态变量是不够的，还要在引用的文件中使用external关键字做&lt;strong&gt;引用声明&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;外部变量在main()前面或头文件中定义它，在文件中定义之后的任何位置使用它；&lt;/li&gt;
&lt;li&gt;单定义规则：变量只能定义声明一次；&lt;/li&gt;
&lt;li&gt;局部变量隐藏同名的全局变量。如果要访问全局变量，可用作用域解析符“：：”；&lt;/li&gt;
&lt;li&gt;静态变量将隐藏常规外部变量（使用external关键字引用）。&lt;br&gt;关于external关键字的测试是很简单的，这里不给出代码。另外提到单定义规则，有一点需要注意。任何一个包含头文件的cpp都要重新编译这个头文件，因此头文件绝对不能包含函数体与变量。不然，两个或两个以上cpp包含它会出现重定义错误。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;五种变量存储方式&quot;&gt;&lt;a href=&quot;#五种变量存储方式&quot; class=&quot;headerlink&quot; title=&quot;五种变量存储方式&quot;&gt;&lt;/a&gt;五种变量存储方式&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center
    
    </summary>
    
      <category term="变量存储" scheme="http://yoursite.com/categories/%E5%8F%98%E9%87%8F%E5%AD%98%E5%82%A8/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++内存存储区</title>
    <link href="http://yoursite.com/2016/04/05/C++%E5%86%85%E5%AD%98%E5%AD%98%E5%82%A8%E5%8C%BA/"/>
    <id>http://yoursite.com/2016/04/05/C++内存存储区/</id>
    <published>2016-04-05T02:17:33.000Z</published>
    <updated>2016-04-14T10:01:30.387Z</updated>
    
    <content type="html">&lt;h3 id=&quot;C-内存分配方式有五种：&quot;&gt;&lt;a href=&quot;#C-内存分配方式有五种：&quot; class=&quot;headerlink&quot; title=&quot;C++内存分配方式有五种：&quot;&gt;&lt;/a&gt;C++内存分配方式有五种：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;栈：局部变量、函数参数等&lt;ul&gt;
&lt;li&gt;可以实现函数调用；&lt;/li&gt;
&lt;li&gt;动态扩展、收缩；&lt;/li&gt;
&lt;li&gt;位于用户虚拟地址空间顶部。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;堆：new分配的内存块，delete释放。&lt;/li&gt;
&lt;li&gt;自由存储区：malloc分配，free释放。&lt;/li&gt;
&lt;li&gt;全局/静态存储区：全局变量与静态变量&lt;/li&gt;
&lt;li&gt;常量存储区：存放常量&lt;ul&gt;
&lt;li&gt;如 string s1 = “abcd”；s1是代码块中的指针，在栈中；“abcd”是常量，在常量存储区。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;new和malloc的区别：&quot;&gt;&lt;a href=&quot;#new和malloc的区别：&quot; class=&quot;headerlink&quot; title=&quot;new和malloc的区别：&quot;&gt;&lt;/a&gt;new和malloc的区别：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;new可以认为是malloc加构造函数的执行；&lt;/li&gt;
&lt;li&gt;new出来的指针是直接带类型信息的，malloc返回void指针；&lt;/li&gt;
&lt;li&gt;delete会相应调用对象的析构函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;堆和栈的区别：&quot;&gt;&lt;a href=&quot;#堆和栈的区别：&quot; class=&quot;headerlink&quot; title=&quot;堆和栈的区别：&quot;&gt;&lt;/a&gt;堆和栈的区别：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;管理方式：栈是编译器自助管理；堆是程序员控制，容易内存泄漏；&lt;ul&gt;
&lt;li&gt;内存泄漏：申请指针，指针指向内存，作用域或生命周期到了，指针释 放，但内存并没有释放，也无法访问，变成“死内存”。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;空间大小：堆内存几乎没有限制；栈一般有一定大小（编译器有默认值，可修改）&lt;/li&gt;
&lt;li&gt;碎片问题：堆频繁new/delete会产生大量碎片（delete出来的空间几乎不可能恰好等于new的空间）；栈不会；&lt;/li&gt;
&lt;li&gt;生长方向：堆向上；栈向下。&lt;/li&gt;
&lt;li&gt;分配方式：堆动态；栈动态（alloca，但他不需人工释放）或静态（编译器完成）&lt;/li&gt;
&lt;li&gt;分配效率：栈高于堆（栈：计算机系统提供，有底层支持；堆：C/C++库提供）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;以上内容主要来自于&lt;a href=&quot;http://www.cnblogs.com/daocaoren/archive/2011/06/29/2092957.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;C-内存分配方式有五种：&quot;&gt;&lt;a href=&quot;#C-内存分配方式有五种：&quot; class=&quot;headerlink&quot; title=&quot;C++内存分配方式有五种：&quot;&gt;&lt;/a&gt;C++内存分配方式有五种：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;栈：局部变量、函数参数等&lt;ul&gt;
&lt;li&gt;可
    
    </summary>
    
      <category term="内存存储" scheme="http://yoursite.com/categories/%E5%86%85%E5%AD%98%E5%AD%98%E5%82%A8/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
</feed>
